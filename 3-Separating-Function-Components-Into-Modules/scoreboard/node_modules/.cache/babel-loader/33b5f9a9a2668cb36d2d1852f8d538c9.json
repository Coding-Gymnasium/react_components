{"ast":null,"code":"var _jsxFileName = \"/Users/nicorithner/coding_practice/frontend_practice/React_Stuff/react_components/3-Separating-Function-Components-Into-Modules/scoreboard/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Player from './Player';\nimport AddPlayerForm from './AddPlayerForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      players: [{\n        name: \"Guil\",\n        score: 0,\n        id: 1\n      }, {\n        name: \"Treasure\",\n        score: 0,\n        id: 2\n      }, {\n        name: \"Ashley\",\n        score: 0,\n        id: 3\n      }, {\n        name: \"James\",\n        score: 0,\n        id: 4\n      }]\n    };\n    this.prevPlayerId = 4;\n\n    this.handleScoreChange = (index, delta) => {\n      this.setState(prevState => {\n        const updatedPlayers = [...prevState.players];\n        const updatedPlayer = { ...updatedPlayers[index]\n        };\n        updatedPlayer.score += delta;\n        updatedPlayers[index] = updatedPlayer;\n        return {\n          players: updatedPlayers\n        };\n      });\n    };\n\n    this.handleAddPlayer = name => {\n      this.setState(prevState => {\n        return {\n          players: [...prevState.players, {\n            name,\n            score: 0,\n            id: this.prevPlayerId += 1\n          }]\n        };\n      });\n    };\n\n    this.handleRemovePlayer = id => {\n      this.setState(prevState => {\n        return {\n          players: prevState.players.filter(p => p.id !== id)\n        };\n      });\n    };\n\n    this.getHighScore = () => {\n      const scores = this.state.players.map(p => p.score);\n      const highScore = Math.max(...scores);\n\n      if (highScore) {\n        return highScore;\n      }\n\n      return null;\n    };\n  }\n\n  render() {\n    const highScore = this.getHighScore();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scoreboard\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        title: \"Scoreboard\",\n        players: this.state.players\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), this.state.players.map((player, index) => /*#__PURE__*/_jsxDEV(Player, {\n        name: player.name,\n        score: player.score,\n        id: player.id,\n        index: index,\n        changeScore: this.handleScoreChange,\n        removePlayer: this.handleRemovePlayer\n      }, player.id.toString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(AddPlayerForm, {\n        addPlayer: this.handleAddPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nicorithner/coding_practice/frontend_practice/React_Stuff/react_components/3-Separating-Function-Components-Into-Modules/scoreboard/src/components/App.js"],"names":["React","Component","Header","Player","AddPlayerForm","App","state","players","name","score","id","prevPlayerId","handleScoreChange","index","delta","setState","prevState","updatedPlayers","updatedPlayer","handleAddPlayer","handleRemovePlayer","filter","p","getHighScore","scores","map","highScore","Math","max","render","player","toString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from './Header';\nimport Player from './Player';\nimport AddPlayerForm from './AddPlayerForm';\n\nclass App extends Component {\n  state = {\n    players: [\n      {\n        name: \"Guil\",\n        score: 0,\n        id: 1\n      },\n      {\n        name: \"Treasure\",\n        score: 0,\n        id: 2\n      },\n      {\n        name: \"Ashley\",\n        score: 0,\n        id: 3\n      },\n      {\n        name: \"James\",\n        score: 0,\n        id: 4\n      }\n    ]\n  };\n\n  // player id counter\n  prevPlayerId = 4;\n\n  handleScoreChange = (index, delta) => {\n    this.setState( prevState => {\n      const updatedPlayers = [ ...prevState.players ];\n      const updatedPlayer = { ...updatedPlayers[index] };\n\n      updatedPlayer.score += delta;\n      updatedPlayers[index] = updatedPlayer;\n\n      return {\n        players: updatedPlayers\n      };\n    });\n  }\n\n  handleAddPlayer = (name) => {\n    this.setState( prevState => {\n      return {\n        players: [\n          ...prevState.players,\n          {\n            name,\n            score: 0,\n            id: this.prevPlayerId += 1\n          }\n        ]\n      }\n    });\n  }\n\n  handleRemovePlayer = (id) => {\n    this.setState( prevState => {\n      return {\n        players: prevState.players.filter(p => p.id !== id)\n      };\n    });\n  }\n\n  getHighScore = () => {\n    const scores = this.state.players.map( p => p.score );\n    const highScore = Math.max(...scores);\n    if (highScore) {\n      return highScore;\n    }\n    return null;\n  }\n\n  render() {\n    const highScore = this.getHighScore();\n\n    return (\n      <div className=\"scoreboard\">\n        <Header\n          title=\"Scoreboard\"\n          players={this.state.players}\n        />\n\n        {/* Players list */}\n        {this.state.players.map( (player, index) =>\n          <Player\n            name={player.name}\n            score={player.score}\n            id={player.id}\n            key={player.id.toString()}\n            index={index}\n            changeScore={this.handleScoreChange}\n            removePlayer={this.handleRemovePlayer}\n          />\n        )}\n        < AddPlayerForm addPlayer={this.handleAddPlayer} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}